steps:
  - label: "fossa analyze"
    agents:
      queue: "init"
      docker: "*"
    command: "./scripts/buildkite/fossa.sh"
  - label: ":golang: unit test"
    agents:
      queue: "workers"
      docker: "*"
    command: "make cover_profile"
    artifact_paths:
      - "build/coverage/*.out"
    plugins:
      - docker-compose#v3.0.0:
          run: unit-test
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration test with cassandra"
    agents:
      queue: "workers"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.0.0:
          run: integration-test-cassandra
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration test with cassandra with ElasticSearch V7"
    agents:
      queue: "workers"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.0.0:
          run: integration-test-cassandra
          config: docker/buildkite/docker-compose-es7.yml

  - label: ":golang: integration ndc test with cassandra"
    agents:
      queue: "workers"
      docker: "*"
    command: "make cover_ndc_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.0.0:
          run: integration-test-ndc-cassandra
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration test with mysql"
    agents:
      queue: "workers"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.0.0:
          run: integration-test-mysql
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration ndc test with mysql"
    agents:
      queue: "workers"
      docker: "*"
    command: "make cover_ndc_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.0.0:
          run: integration-test-ndc-mysql
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration test with postgres"
    agents:
      queue: "workers"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.0.0:
          run: integration-test-postgres
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration ndc test with postgres"
    agents:
      queue: "workers"
      docker: "*"
    command: "make cover_ndc_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.0.0:
          run: integration-test-ndc-postgres
          config: docker/buildkite/docker-compose.yml

  - wait

  - label: ":golang: code-coverage"
    agents:
      queue: "workers"
      docker: "*"
    command: "scripts/buildkite/gocov.sh"
    retry:
      automatic:
        limit: 2
    plugins:
      - docker-compose#v3.0.0:
          run: coverage-report
          config: docker/buildkite/docker-compose.yml

  - label: ":docker: build and push master"
    agents:
      queue: "workers"
      docker: "*"
    command: "scripts/buildkite/docker-push.sh"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-login#v2.0.1:
          username: ubercadence
          password-env: DOCKER_LOGIN_PASSWORD