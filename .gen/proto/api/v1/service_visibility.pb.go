// Copyright (c) 2020 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: uber/cadence/api/v1/service_visibility.proto

package apiv1

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListWorkflowExecutionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain        string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	PageSize      int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	NextPageToken []byte `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Query         string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListWorkflowExecutionsRequest) Reset() {
	*x = ListWorkflowExecutionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowExecutionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowExecutionsRequest) ProtoMessage() {}

func (x *ListWorkflowExecutionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowExecutionsRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowExecutionsRequest) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_service_visibility_proto_rawDescGZIP(), []int{0}
}

func (x *ListWorkflowExecutionsRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ListWorkflowExecutionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWorkflowExecutionsRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

func (x *ListWorkflowExecutionsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ListWorkflowExecutionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Executions    []*WorkflowExecutionInfo `protobuf:"bytes,1,rep,name=executions,proto3" json:"executions,omitempty"`
	NextPageToken []byte                   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListWorkflowExecutionsResponse) Reset() {
	*x = ListWorkflowExecutionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowExecutionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowExecutionsResponse) ProtoMessage() {}

func (x *ListWorkflowExecutionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowExecutionsResponse.ProtoReflect.Descriptor instead.
func (*ListWorkflowExecutionsResponse) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_service_visibility_proto_rawDescGZIP(), []int{1}
}

func (x *ListWorkflowExecutionsResponse) GetExecutions() []*WorkflowExecutionInfo {
	if x != nil {
		return x.Executions
	}
	return nil
}

func (x *ListWorkflowExecutionsResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type ListOpenWorkflowExecutionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain          string           `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	PageSize        int32            `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	NextPageToken   []byte           `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	StartTimeFilter *StartTimeFilter `protobuf:"bytes,4,opt,name=start_time_filter,json=startTimeFilter,proto3" json:"start_time_filter,omitempty"`
	// Types that are assignable to Filters:
	//	*ListOpenWorkflowExecutionsRequest_ExecutionFilter
	//	*ListOpenWorkflowExecutionsRequest_TypeFilter
	Filters isListOpenWorkflowExecutionsRequest_Filters `protobuf_oneof:"filters"`
}

func (x *ListOpenWorkflowExecutionsRequest) Reset() {
	*x = ListOpenWorkflowExecutionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOpenWorkflowExecutionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOpenWorkflowExecutionsRequest) ProtoMessage() {}

func (x *ListOpenWorkflowExecutionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOpenWorkflowExecutionsRequest.ProtoReflect.Descriptor instead.
func (*ListOpenWorkflowExecutionsRequest) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_service_visibility_proto_rawDescGZIP(), []int{2}
}

func (x *ListOpenWorkflowExecutionsRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ListOpenWorkflowExecutionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListOpenWorkflowExecutionsRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

func (x *ListOpenWorkflowExecutionsRequest) GetStartTimeFilter() *StartTimeFilter {
	if x != nil {
		return x.StartTimeFilter
	}
	return nil
}

func (m *ListOpenWorkflowExecutionsRequest) GetFilters() isListOpenWorkflowExecutionsRequest_Filters {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (x *ListOpenWorkflowExecutionsRequest) GetExecutionFilter() *WorkflowExecutionFilter {
	if x, ok := x.GetFilters().(*ListOpenWorkflowExecutionsRequest_ExecutionFilter); ok {
		return x.ExecutionFilter
	}
	return nil
}

func (x *ListOpenWorkflowExecutionsRequest) GetTypeFilter() *WorkflowTypeFilter {
	if x, ok := x.GetFilters().(*ListOpenWorkflowExecutionsRequest_TypeFilter); ok {
		return x.TypeFilter
	}
	return nil
}

type isListOpenWorkflowExecutionsRequest_Filters interface {
	isListOpenWorkflowExecutionsRequest_Filters()
}

type ListOpenWorkflowExecutionsRequest_ExecutionFilter struct {
	ExecutionFilter *WorkflowExecutionFilter `protobuf:"bytes,5,opt,name=execution_filter,json=executionFilter,proto3,oneof"`
}

type ListOpenWorkflowExecutionsRequest_TypeFilter struct {
	TypeFilter *WorkflowTypeFilter `protobuf:"bytes,6,opt,name=type_filter,json=typeFilter,proto3,oneof"`
}

func (*ListOpenWorkflowExecutionsRequest_ExecutionFilter) isListOpenWorkflowExecutionsRequest_Filters() {
}

func (*ListOpenWorkflowExecutionsRequest_TypeFilter) isListOpenWorkflowExecutionsRequest_Filters() {}

type ListOpenWorkflowExecutionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Executions    []*WorkflowExecutionInfo `protobuf:"bytes,1,rep,name=executions,proto3" json:"executions,omitempty"`
	NextPageToken []byte                   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListOpenWorkflowExecutionsResponse) Reset() {
	*x = ListOpenWorkflowExecutionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOpenWorkflowExecutionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOpenWorkflowExecutionsResponse) ProtoMessage() {}

func (x *ListOpenWorkflowExecutionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOpenWorkflowExecutionsResponse.ProtoReflect.Descriptor instead.
func (*ListOpenWorkflowExecutionsResponse) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_service_visibility_proto_rawDescGZIP(), []int{3}
}

func (x *ListOpenWorkflowExecutionsResponse) GetExecutions() []*WorkflowExecutionInfo {
	if x != nil {
		return x.Executions
	}
	return nil
}

func (x *ListOpenWorkflowExecutionsResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type ListClosedWorkflowExecutionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain          string           `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	PageSize        int32            `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	NextPageToken   []byte           `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	StartTimeFilter *StartTimeFilter `protobuf:"bytes,4,opt,name=start_time_filter,json=startTimeFilter,proto3" json:"start_time_filter,omitempty"`
	// Types that are assignable to Filters:
	//	*ListClosedWorkflowExecutionsRequest_ExecutionFilter
	//	*ListClosedWorkflowExecutionsRequest_TypeFilter
	//	*ListClosedWorkflowExecutionsRequest_StatusFilter
	Filters isListClosedWorkflowExecutionsRequest_Filters `protobuf_oneof:"filters"`
}

func (x *ListClosedWorkflowExecutionsRequest) Reset() {
	*x = ListClosedWorkflowExecutionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClosedWorkflowExecutionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClosedWorkflowExecutionsRequest) ProtoMessage() {}

func (x *ListClosedWorkflowExecutionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClosedWorkflowExecutionsRequest.ProtoReflect.Descriptor instead.
func (*ListClosedWorkflowExecutionsRequest) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_service_visibility_proto_rawDescGZIP(), []int{4}
}

func (x *ListClosedWorkflowExecutionsRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ListClosedWorkflowExecutionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClosedWorkflowExecutionsRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

func (x *ListClosedWorkflowExecutionsRequest) GetStartTimeFilter() *StartTimeFilter {
	if x != nil {
		return x.StartTimeFilter
	}
	return nil
}

func (m *ListClosedWorkflowExecutionsRequest) GetFilters() isListClosedWorkflowExecutionsRequest_Filters {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (x *ListClosedWorkflowExecutionsRequest) GetExecutionFilter() *WorkflowExecutionFilter {
	if x, ok := x.GetFilters().(*ListClosedWorkflowExecutionsRequest_ExecutionFilter); ok {
		return x.ExecutionFilter
	}
	return nil
}

func (x *ListClosedWorkflowExecutionsRequest) GetTypeFilter() *WorkflowTypeFilter {
	if x, ok := x.GetFilters().(*ListClosedWorkflowExecutionsRequest_TypeFilter); ok {
		return x.TypeFilter
	}
	return nil
}

func (x *ListClosedWorkflowExecutionsRequest) GetStatusFilter() *StatusFilter {
	if x, ok := x.GetFilters().(*ListClosedWorkflowExecutionsRequest_StatusFilter); ok {
		return x.StatusFilter
	}
	return nil
}

type isListClosedWorkflowExecutionsRequest_Filters interface {
	isListClosedWorkflowExecutionsRequest_Filters()
}

type ListClosedWorkflowExecutionsRequest_ExecutionFilter struct {
	ExecutionFilter *WorkflowExecutionFilter `protobuf:"bytes,5,opt,name=execution_filter,json=executionFilter,proto3,oneof"`
}

type ListClosedWorkflowExecutionsRequest_TypeFilter struct {
	TypeFilter *WorkflowTypeFilter `protobuf:"bytes,6,opt,name=type_filter,json=typeFilter,proto3,oneof"`
}

type ListClosedWorkflowExecutionsRequest_StatusFilter struct {
	StatusFilter *StatusFilter `protobuf:"bytes,7,opt,name=status_filter,json=statusFilter,proto3,oneof"`
}

func (*ListClosedWorkflowExecutionsRequest_ExecutionFilter) isListClosedWorkflowExecutionsRequest_Filters() {
}

func (*ListClosedWorkflowExecutionsRequest_TypeFilter) isListClosedWorkflowExecutionsRequest_Filters() {
}

func (*ListClosedWorkflowExecutionsRequest_StatusFilter) isListClosedWorkflowExecutionsRequest_Filters() {
}

type ListClosedWorkflowExecutionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Executions    []*WorkflowExecutionInfo `protobuf:"bytes,1,rep,name=executions,proto3" json:"executions,omitempty"`
	NextPageToken []byte                   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListClosedWorkflowExecutionsResponse) Reset() {
	*x = ListClosedWorkflowExecutionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClosedWorkflowExecutionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClosedWorkflowExecutionsResponse) ProtoMessage() {}

func (x *ListClosedWorkflowExecutionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClosedWorkflowExecutionsResponse.ProtoReflect.Descriptor instead.
func (*ListClosedWorkflowExecutionsResponse) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_service_visibility_proto_rawDescGZIP(), []int{5}
}

func (x *ListClosedWorkflowExecutionsResponse) GetExecutions() []*WorkflowExecutionInfo {
	if x != nil {
		return x.Executions
	}
	return nil
}

func (x *ListClosedWorkflowExecutionsResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type ListArchivedWorkflowExecutionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain        string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	PageSize      int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	NextPageToken []byte `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Query         string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListArchivedWorkflowExecutionsRequest) Reset() {
	*x = ListArchivedWorkflowExecutionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArchivedWorkflowExecutionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArchivedWorkflowExecutionsRequest) ProtoMessage() {}

func (x *ListArchivedWorkflowExecutionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArchivedWorkflowExecutionsRequest.ProtoReflect.Descriptor instead.
func (*ListArchivedWorkflowExecutionsRequest) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_service_visibility_proto_rawDescGZIP(), []int{6}
}

func (x *ListArchivedWorkflowExecutionsRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ListArchivedWorkflowExecutionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListArchivedWorkflowExecutionsRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

func (x *ListArchivedWorkflowExecutionsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ListArchivedWorkflowExecutionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Executions    []*WorkflowExecutionInfo `protobuf:"bytes,1,rep,name=executions,proto3" json:"executions,omitempty"`
	NextPageToken []byte                   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListArchivedWorkflowExecutionsResponse) Reset() {
	*x = ListArchivedWorkflowExecutionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArchivedWorkflowExecutionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArchivedWorkflowExecutionsResponse) ProtoMessage() {}

func (x *ListArchivedWorkflowExecutionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArchivedWorkflowExecutionsResponse.ProtoReflect.Descriptor instead.
func (*ListArchivedWorkflowExecutionsResponse) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_service_visibility_proto_rawDescGZIP(), []int{7}
}

func (x *ListArchivedWorkflowExecutionsResponse) GetExecutions() []*WorkflowExecutionInfo {
	if x != nil {
		return x.Executions
	}
	return nil
}

func (x *ListArchivedWorkflowExecutionsResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type ScanWorkflowExecutionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain        string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	PageSize      int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	NextPageToken []byte `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Query         string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ScanWorkflowExecutionsRequest) Reset() {
	*x = ScanWorkflowExecutionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanWorkflowExecutionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanWorkflowExecutionsRequest) ProtoMessage() {}

func (x *ScanWorkflowExecutionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanWorkflowExecutionsRequest.ProtoReflect.Descriptor instead.
func (*ScanWorkflowExecutionsRequest) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_service_visibility_proto_rawDescGZIP(), []int{8}
}

func (x *ScanWorkflowExecutionsRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ScanWorkflowExecutionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ScanWorkflowExecutionsRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

func (x *ScanWorkflowExecutionsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ScanWorkflowExecutionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Executions    []*WorkflowExecutionInfo `protobuf:"bytes,1,rep,name=executions,proto3" json:"executions,omitempty"`
	NextPageToken []byte                   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ScanWorkflowExecutionsResponse) Reset() {
	*x = ScanWorkflowExecutionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanWorkflowExecutionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanWorkflowExecutionsResponse) ProtoMessage() {}

func (x *ScanWorkflowExecutionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanWorkflowExecutionsResponse.ProtoReflect.Descriptor instead.
func (*ScanWorkflowExecutionsResponse) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_service_visibility_proto_rawDescGZIP(), []int{9}
}

func (x *ScanWorkflowExecutionsResponse) GetExecutions() []*WorkflowExecutionInfo {
	if x != nil {
		return x.Executions
	}
	return nil
}

func (x *ScanWorkflowExecutionsResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type CountWorkflowExecutionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Query  string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *CountWorkflowExecutionsRequest) Reset() {
	*x = CountWorkflowExecutionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountWorkflowExecutionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountWorkflowExecutionsRequest) ProtoMessage() {}

func (x *CountWorkflowExecutionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountWorkflowExecutionsRequest.ProtoReflect.Descriptor instead.
func (*CountWorkflowExecutionsRequest) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_service_visibility_proto_rawDescGZIP(), []int{10}
}

func (x *CountWorkflowExecutionsRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CountWorkflowExecutionsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type CountWorkflowExecutionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountWorkflowExecutionsResponse) Reset() {
	*x = CountWorkflowExecutionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountWorkflowExecutionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountWorkflowExecutionsResponse) ProtoMessage() {}

func (x *CountWorkflowExecutionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountWorkflowExecutionsResponse.ProtoReflect.Descriptor instead.
func (*CountWorkflowExecutionsResponse) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_service_visibility_proto_rawDescGZIP(), []int{11}
}

func (x *CountWorkflowExecutionsResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetSearchAttributesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSearchAttributesRequest) Reset() {
	*x = GetSearchAttributesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSearchAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSearchAttributesRequest) ProtoMessage() {}

func (x *GetSearchAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSearchAttributesRequest.ProtoReflect.Descriptor instead.
func (*GetSearchAttributesRequest) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_service_visibility_proto_rawDescGZIP(), []int{12}
}

type GetSearchAttributesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys map[string]IndexedValueType `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=uber.cadence.api.v1.IndexedValueType"`
}

func (x *GetSearchAttributesResponse) Reset() {
	*x = GetSearchAttributesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSearchAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSearchAttributesResponse) ProtoMessage() {}

func (x *GetSearchAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_service_visibility_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSearchAttributesResponse.ProtoReflect.Descriptor instead.
func (*GetSearchAttributesResponse) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_service_visibility_proto_rawDescGZIP(), []int{13}
}

func (x *GetSearchAttributesResponse) GetKeys() map[string]IndexedValueType {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_uber_cadence_api_v1_service_visibility_proto protoreflect.FileDescriptor

var file_uber_cadence_api_v1_service_visibility_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x75, 0x62, 0x65, 0x72, 0x2f, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13,
	0x75, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x1a, 0x24, 0x75, 0x62, 0x65, 0x72, 0x2f, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x75, 0x62, 0x65, 0x72, 0x2f,
	0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x01,
	0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x22, 0x94, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x75, 0x62, 0x65, 0x72,
	0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x84, 0x03, 0x0a, 0x21, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x50, 0x0a, 0x11,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63,
	0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x59,
	0x0a, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e,
	0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0b, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x22, 0x98, 0x01, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x75, 0x62,
	0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd0, 0x03, 0x0a, 0x23,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x50, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x62,
	0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x59, 0x0a, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x75,
	0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4a, 0x0a,
	0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x74,
	0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x9a,
	0x01, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x75, 0x62,
	0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x25,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x9c, 0x01, 0x0a, 0x26, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63,
	0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x92, 0x01, 0x0a, 0x1d, 0x53, 0x63, 0x61, 0x6e,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x94, 0x01, 0x0a,
	0x1e, 0x53, 0x63, 0x61, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x4e, 0x0a, 0x1e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x22, 0x37, 0x0a, 0x1f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1c, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e,
	0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x1a, 0x5e, 0x0a, 0x09, 0x4b, 0x65,
	0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e,
	0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xda, 0x07, 0x0a, 0x0d, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x41, 0x50, 0x49, 0x12, 0x81, 0x01, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63,
	0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x75, 0x62,
	0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x8d, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x36, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63,
	0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x93, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x38, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x75, 0x62,
	0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x2e, 0x75, 0x62, 0x65, 0x72,
	0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x16, 0x53, 0x63, 0x61, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x2e,
	0x75, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x33, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63,
	0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x2f, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x56, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x75,
	0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x42, 0x08, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x62, 0x65, 0x72, 0x2f,
	0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x2e, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uber_cadence_api_v1_service_visibility_proto_rawDescOnce sync.Once
	file_uber_cadence_api_v1_service_visibility_proto_rawDescData = file_uber_cadence_api_v1_service_visibility_proto_rawDesc
)

func file_uber_cadence_api_v1_service_visibility_proto_rawDescGZIP() []byte {
	file_uber_cadence_api_v1_service_visibility_proto_rawDescOnce.Do(func() {
		file_uber_cadence_api_v1_service_visibility_proto_rawDescData = protoimpl.X.CompressGZIP(file_uber_cadence_api_v1_service_visibility_proto_rawDescData)
	})
	return file_uber_cadence_api_v1_service_visibility_proto_rawDescData
}

var file_uber_cadence_api_v1_service_visibility_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_uber_cadence_api_v1_service_visibility_proto_goTypes = []interface{}{
	(*ListWorkflowExecutionsRequest)(nil),          // 0: uber.cadence.api.v1.ListWorkflowExecutionsRequest
	(*ListWorkflowExecutionsResponse)(nil),         // 1: uber.cadence.api.v1.ListWorkflowExecutionsResponse
	(*ListOpenWorkflowExecutionsRequest)(nil),      // 2: uber.cadence.api.v1.ListOpenWorkflowExecutionsRequest
	(*ListOpenWorkflowExecutionsResponse)(nil),     // 3: uber.cadence.api.v1.ListOpenWorkflowExecutionsResponse
	(*ListClosedWorkflowExecutionsRequest)(nil),    // 4: uber.cadence.api.v1.ListClosedWorkflowExecutionsRequest
	(*ListClosedWorkflowExecutionsResponse)(nil),   // 5: uber.cadence.api.v1.ListClosedWorkflowExecutionsResponse
	(*ListArchivedWorkflowExecutionsRequest)(nil),  // 6: uber.cadence.api.v1.ListArchivedWorkflowExecutionsRequest
	(*ListArchivedWorkflowExecutionsResponse)(nil), // 7: uber.cadence.api.v1.ListArchivedWorkflowExecutionsResponse
	(*ScanWorkflowExecutionsRequest)(nil),          // 8: uber.cadence.api.v1.ScanWorkflowExecutionsRequest
	(*ScanWorkflowExecutionsResponse)(nil),         // 9: uber.cadence.api.v1.ScanWorkflowExecutionsResponse
	(*CountWorkflowExecutionsRequest)(nil),         // 10: uber.cadence.api.v1.CountWorkflowExecutionsRequest
	(*CountWorkflowExecutionsResponse)(nil),        // 11: uber.cadence.api.v1.CountWorkflowExecutionsResponse
	(*GetSearchAttributesRequest)(nil),             // 12: uber.cadence.api.v1.GetSearchAttributesRequest
	(*GetSearchAttributesResponse)(nil),            // 13: uber.cadence.api.v1.GetSearchAttributesResponse
	nil,                                            // 14: uber.cadence.api.v1.GetSearchAttributesResponse.KeysEntry
	(*WorkflowExecutionInfo)(nil),                  // 15: uber.cadence.api.v1.WorkflowExecutionInfo
	(*StartTimeFilter)(nil),                        // 16: uber.cadence.api.v1.StartTimeFilter
	(*WorkflowExecutionFilter)(nil),                // 17: uber.cadence.api.v1.WorkflowExecutionFilter
	(*WorkflowTypeFilter)(nil),                     // 18: uber.cadence.api.v1.WorkflowTypeFilter
	(*StatusFilter)(nil),                           // 19: uber.cadence.api.v1.StatusFilter
	(IndexedValueType)(0),                          // 20: uber.cadence.api.v1.IndexedValueType
}
var file_uber_cadence_api_v1_service_visibility_proto_depIdxs = []int32{
	15, // 0: uber.cadence.api.v1.ListWorkflowExecutionsResponse.executions:type_name -> uber.cadence.api.v1.WorkflowExecutionInfo
	16, // 1: uber.cadence.api.v1.ListOpenWorkflowExecutionsRequest.start_time_filter:type_name -> uber.cadence.api.v1.StartTimeFilter
	17, // 2: uber.cadence.api.v1.ListOpenWorkflowExecutionsRequest.execution_filter:type_name -> uber.cadence.api.v1.WorkflowExecutionFilter
	18, // 3: uber.cadence.api.v1.ListOpenWorkflowExecutionsRequest.type_filter:type_name -> uber.cadence.api.v1.WorkflowTypeFilter
	15, // 4: uber.cadence.api.v1.ListOpenWorkflowExecutionsResponse.executions:type_name -> uber.cadence.api.v1.WorkflowExecutionInfo
	16, // 5: uber.cadence.api.v1.ListClosedWorkflowExecutionsRequest.start_time_filter:type_name -> uber.cadence.api.v1.StartTimeFilter
	17, // 6: uber.cadence.api.v1.ListClosedWorkflowExecutionsRequest.execution_filter:type_name -> uber.cadence.api.v1.WorkflowExecutionFilter
	18, // 7: uber.cadence.api.v1.ListClosedWorkflowExecutionsRequest.type_filter:type_name -> uber.cadence.api.v1.WorkflowTypeFilter
	19, // 8: uber.cadence.api.v1.ListClosedWorkflowExecutionsRequest.status_filter:type_name -> uber.cadence.api.v1.StatusFilter
	15, // 9: uber.cadence.api.v1.ListClosedWorkflowExecutionsResponse.executions:type_name -> uber.cadence.api.v1.WorkflowExecutionInfo
	15, // 10: uber.cadence.api.v1.ListArchivedWorkflowExecutionsResponse.executions:type_name -> uber.cadence.api.v1.WorkflowExecutionInfo
	15, // 11: uber.cadence.api.v1.ScanWorkflowExecutionsResponse.executions:type_name -> uber.cadence.api.v1.WorkflowExecutionInfo
	14, // 12: uber.cadence.api.v1.GetSearchAttributesResponse.keys:type_name -> uber.cadence.api.v1.GetSearchAttributesResponse.KeysEntry
	20, // 13: uber.cadence.api.v1.GetSearchAttributesResponse.KeysEntry.value:type_name -> uber.cadence.api.v1.IndexedValueType
	0,  // 14: uber.cadence.api.v1.VisibilityAPI.ListWorkflowExecutions:input_type -> uber.cadence.api.v1.ListWorkflowExecutionsRequest
	2,  // 15: uber.cadence.api.v1.VisibilityAPI.ListOpenWorkflowExecutions:input_type -> uber.cadence.api.v1.ListOpenWorkflowExecutionsRequest
	4,  // 16: uber.cadence.api.v1.VisibilityAPI.ListClosedWorkflowExecutions:input_type -> uber.cadence.api.v1.ListClosedWorkflowExecutionsRequest
	6,  // 17: uber.cadence.api.v1.VisibilityAPI.ListArchivedWorkflowExecutions:input_type -> uber.cadence.api.v1.ListArchivedWorkflowExecutionsRequest
	8,  // 18: uber.cadence.api.v1.VisibilityAPI.ScanWorkflowExecutions:input_type -> uber.cadence.api.v1.ScanWorkflowExecutionsRequest
	10, // 19: uber.cadence.api.v1.VisibilityAPI.CountWorkflowExecutions:input_type -> uber.cadence.api.v1.CountWorkflowExecutionsRequest
	12, // 20: uber.cadence.api.v1.VisibilityAPI.GetSearchAttributes:input_type -> uber.cadence.api.v1.GetSearchAttributesRequest
	1,  // 21: uber.cadence.api.v1.VisibilityAPI.ListWorkflowExecutions:output_type -> uber.cadence.api.v1.ListWorkflowExecutionsResponse
	3,  // 22: uber.cadence.api.v1.VisibilityAPI.ListOpenWorkflowExecutions:output_type -> uber.cadence.api.v1.ListOpenWorkflowExecutionsResponse
	5,  // 23: uber.cadence.api.v1.VisibilityAPI.ListClosedWorkflowExecutions:output_type -> uber.cadence.api.v1.ListClosedWorkflowExecutionsResponse
	7,  // 24: uber.cadence.api.v1.VisibilityAPI.ListArchivedWorkflowExecutions:output_type -> uber.cadence.api.v1.ListArchivedWorkflowExecutionsResponse
	9,  // 25: uber.cadence.api.v1.VisibilityAPI.ScanWorkflowExecutions:output_type -> uber.cadence.api.v1.ScanWorkflowExecutionsResponse
	11, // 26: uber.cadence.api.v1.VisibilityAPI.CountWorkflowExecutions:output_type -> uber.cadence.api.v1.CountWorkflowExecutionsResponse
	13, // 27: uber.cadence.api.v1.VisibilityAPI.GetSearchAttributes:output_type -> uber.cadence.api.v1.GetSearchAttributesResponse
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_uber_cadence_api_v1_service_visibility_proto_init() }
func file_uber_cadence_api_v1_service_visibility_proto_init() {
	if File_uber_cadence_api_v1_service_visibility_proto != nil {
		return
	}
	file_uber_cadence_api_v1_visibility_proto_init()
	file_uber_cadence_api_v1_workflow_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_uber_cadence_api_v1_service_visibility_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowExecutionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_service_visibility_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowExecutionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_service_visibility_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOpenWorkflowExecutionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_service_visibility_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOpenWorkflowExecutionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_service_visibility_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClosedWorkflowExecutionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_service_visibility_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClosedWorkflowExecutionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_service_visibility_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArchivedWorkflowExecutionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_service_visibility_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArchivedWorkflowExecutionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_service_visibility_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanWorkflowExecutionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_service_visibility_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanWorkflowExecutionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_service_visibility_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountWorkflowExecutionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_service_visibility_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountWorkflowExecutionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_service_visibility_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSearchAttributesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_service_visibility_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSearchAttributesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_uber_cadence_api_v1_service_visibility_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ListOpenWorkflowExecutionsRequest_ExecutionFilter)(nil),
		(*ListOpenWorkflowExecutionsRequest_TypeFilter)(nil),
	}
	file_uber_cadence_api_v1_service_visibility_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ListClosedWorkflowExecutionsRequest_ExecutionFilter)(nil),
		(*ListClosedWorkflowExecutionsRequest_TypeFilter)(nil),
		(*ListClosedWorkflowExecutionsRequest_StatusFilter)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uber_cadence_api_v1_service_visibility_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uber_cadence_api_v1_service_visibility_proto_goTypes,
		DependencyIndexes: file_uber_cadence_api_v1_service_visibility_proto_depIdxs,
		MessageInfos:      file_uber_cadence_api_v1_service_visibility_proto_msgTypes,
	}.Build()
	File_uber_cadence_api_v1_service_visibility_proto = out.File
	file_uber_cadence_api_v1_service_visibility_proto_rawDesc = nil
	file_uber_cadence_api_v1_service_visibility_proto_goTypes = nil
	file_uber_cadence_api_v1_service_visibility_proto_depIdxs = nil
}
