// Copyright (c) 2020 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: uber/cadence/api/v1/tasklist.proto

package apiv1

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TaskListKind int32

const (
	TaskListKind_TASK_LIST_KIND_INVALID TaskListKind = 0
	TaskListKind_TASK_LIST_KIND_NORMAL  TaskListKind = 1
	TaskListKind_TASK_LIST_KIND_STICKY  TaskListKind = 2
)

// Enum value maps for TaskListKind.
var (
	TaskListKind_name = map[int32]string{
		0: "TASK_LIST_KIND_INVALID",
		1: "TASK_LIST_KIND_NORMAL",
		2: "TASK_LIST_KIND_STICKY",
	}
	TaskListKind_value = map[string]int32{
		"TASK_LIST_KIND_INVALID": 0,
		"TASK_LIST_KIND_NORMAL":  1,
		"TASK_LIST_KIND_STICKY":  2,
	}
)

func (x TaskListKind) Enum() *TaskListKind {
	p := new(TaskListKind)
	*p = x
	return p
}

func (x TaskListKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskListKind) Descriptor() protoreflect.EnumDescriptor {
	return file_uber_cadence_api_v1_tasklist_proto_enumTypes[0].Descriptor()
}

func (TaskListKind) Type() protoreflect.EnumType {
	return &file_uber_cadence_api_v1_tasklist_proto_enumTypes[0]
}

func (x TaskListKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskListKind.Descriptor instead.
func (TaskListKind) EnumDescriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_tasklist_proto_rawDescGZIP(), []int{0}
}

type TaskListType int32

const (
	TaskListType_TASK_LIST_TYPE_INVALID  TaskListType = 0
	TaskListType_TASK_LIST_TYPE_DECISION TaskListType = 1
	TaskListType_TASK_LIST_TYPE_ACTIVITY TaskListType = 2
)

// Enum value maps for TaskListType.
var (
	TaskListType_name = map[int32]string{
		0: "TASK_LIST_TYPE_INVALID",
		1: "TASK_LIST_TYPE_DECISION",
		2: "TASK_LIST_TYPE_ACTIVITY",
	}
	TaskListType_value = map[string]int32{
		"TASK_LIST_TYPE_INVALID":  0,
		"TASK_LIST_TYPE_DECISION": 1,
		"TASK_LIST_TYPE_ACTIVITY": 2,
	}
)

func (x TaskListType) Enum() *TaskListType {
	p := new(TaskListType)
	*p = x
	return p
}

func (x TaskListType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskListType) Descriptor() protoreflect.EnumDescriptor {
	return file_uber_cadence_api_v1_tasklist_proto_enumTypes[1].Descriptor()
}

func (TaskListType) Type() protoreflect.EnumType {
	return &file_uber_cadence_api_v1_tasklist_proto_enumTypes[1]
}

func (x TaskListType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskListType.Descriptor instead.
func (TaskListType) EnumDescriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_tasklist_proto_rawDescGZIP(), []int{1}
}

type TaskList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Kind TaskListKind `protobuf:"varint,2,opt,name=kind,proto3,enum=uber.cadence.api.v1.TaskListKind" json:"kind,omitempty"`
}

func (x *TaskList) Reset() {
	*x = TaskList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_tasklist_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskList) ProtoMessage() {}

func (x *TaskList) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_tasklist_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskList.ProtoReflect.Descriptor instead.
func (*TaskList) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_tasklist_proto_rawDescGZIP(), []int{0}
}

func (x *TaskList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskList) GetKind() TaskListKind {
	if x != nil {
		return x.Kind
	}
	return TaskListKind_TASK_LIST_KIND_INVALID
}

type TaskListMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxTasksPerSecond *wrapperspb.DoubleValue `protobuf:"bytes,1,opt,name=max_tasks_per_second,json=maxTasksPerSecond,proto3" json:"max_tasks_per_second,omitempty"`
}

func (x *TaskListMetadata) Reset() {
	*x = TaskListMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_tasklist_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskListMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskListMetadata) ProtoMessage() {}

func (x *TaskListMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_tasklist_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskListMetadata.ProtoReflect.Descriptor instead.
func (*TaskListMetadata) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_tasklist_proto_rawDescGZIP(), []int{1}
}

func (x *TaskListMetadata) GetMaxTasksPerSecond() *wrapperspb.DoubleValue {
	if x != nil {
		return x.MaxTasksPerSecond
	}
	return nil
}

type TaskListPartitionMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key           string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	OwnerHostName string `protobuf:"bytes,2,opt,name=owner_host_name,json=ownerHostName,proto3" json:"owner_host_name,omitempty"`
}

func (x *TaskListPartitionMetadata) Reset() {
	*x = TaskListPartitionMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_tasklist_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskListPartitionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskListPartitionMetadata) ProtoMessage() {}

func (x *TaskListPartitionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_tasklist_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskListPartitionMetadata.ProtoReflect.Descriptor instead.
func (*TaskListPartitionMetadata) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_tasklist_proto_rawDescGZIP(), []int{2}
}

func (x *TaskListPartitionMetadata) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TaskListPartitionMetadata) GetOwnerHostName() string {
	if x != nil {
		return x.OwnerHostName
	}
	return ""
}

type TaskListStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BacklogCountHint int64        `protobuf:"varint,1,opt,name=backlog_count_hint,json=backlogCountHint,proto3" json:"backlog_count_hint,omitempty"`
	ReadLevel        int64        `protobuf:"varint,2,opt,name=read_level,json=readLevel,proto3" json:"read_level,omitempty"`
	AckLevel         int64        `protobuf:"varint,3,opt,name=ack_level,json=ackLevel,proto3" json:"ack_level,omitempty"`
	RatePerSecond    float64      `protobuf:"fixed64,4,opt,name=rate_per_second,json=ratePerSecond,proto3" json:"rate_per_second,omitempty"`
	TaskIdBlock      *TaskIDBlock `protobuf:"bytes,5,opt,name=task_id_block,json=taskIdBlock,proto3" json:"task_id_block,omitempty"`
}

func (x *TaskListStatus) Reset() {
	*x = TaskListStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_tasklist_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskListStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskListStatus) ProtoMessage() {}

func (x *TaskListStatus) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_tasklist_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskListStatus.ProtoReflect.Descriptor instead.
func (*TaskListStatus) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_tasklist_proto_rawDescGZIP(), []int{3}
}

func (x *TaskListStatus) GetBacklogCountHint() int64 {
	if x != nil {
		return x.BacklogCountHint
	}
	return 0
}

func (x *TaskListStatus) GetReadLevel() int64 {
	if x != nil {
		return x.ReadLevel
	}
	return 0
}

func (x *TaskListStatus) GetAckLevel() int64 {
	if x != nil {
		return x.AckLevel
	}
	return 0
}

func (x *TaskListStatus) GetRatePerSecond() float64 {
	if x != nil {
		return x.RatePerSecond
	}
	return 0
}

func (x *TaskListStatus) GetTaskIdBlock() *TaskIDBlock {
	if x != nil {
		return x.TaskIdBlock
	}
	return nil
}

type TaskIDBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartId int64 `protobuf:"varint,1,opt,name=start_id,json=startId,proto3" json:"start_id,omitempty"`
	EndId   int64 `protobuf:"varint,2,opt,name=end_id,json=endId,proto3" json:"end_id,omitempty"`
}

func (x *TaskIDBlock) Reset() {
	*x = TaskIDBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_tasklist_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskIDBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskIDBlock) ProtoMessage() {}

func (x *TaskIDBlock) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_tasklist_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskIDBlock.ProtoReflect.Descriptor instead.
func (*TaskIDBlock) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_tasklist_proto_rawDescGZIP(), []int{4}
}

func (x *TaskIDBlock) GetStartId() int64 {
	if x != nil {
		return x.StartId
	}
	return 0
}

func (x *TaskIDBlock) GetEndId() int64 {
	if x != nil {
		return x.EndId
	}
	return 0
}

type PollerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastAccessTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=last_access_time,json=lastAccessTime,proto3" json:"last_access_time,omitempty"`
	Identity       string                 `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	RatePerSecond  float64                `protobuf:"fixed64,3,opt,name=rate_per_second,json=ratePerSecond,proto3" json:"rate_per_second,omitempty"`
}

func (x *PollerInfo) Reset() {
	*x = PollerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_tasklist_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollerInfo) ProtoMessage() {}

func (x *PollerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_tasklist_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollerInfo.ProtoReflect.Descriptor instead.
func (*PollerInfo) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_tasklist_proto_rawDescGZIP(), []int{5}
}

func (x *PollerInfo) GetLastAccessTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastAccessTime
	}
	return nil
}

func (x *PollerInfo) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *PollerInfo) GetRatePerSecond() float64 {
	if x != nil {
		return x.RatePerSecond
	}
	return 0
}

type StickyExecutionAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerTaskList         *TaskList            `protobuf:"bytes,1,opt,name=worker_task_list,json=workerTaskList,proto3" json:"worker_task_list,omitempty"`
	ScheduleToStartTimeout *durationpb.Duration `protobuf:"bytes,2,opt,name=schedule_to_start_timeout,json=scheduleToStartTimeout,proto3" json:"schedule_to_start_timeout,omitempty"`
}

func (x *StickyExecutionAttributes) Reset() {
	*x = StickyExecutionAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uber_cadence_api_v1_tasklist_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StickyExecutionAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StickyExecutionAttributes) ProtoMessage() {}

func (x *StickyExecutionAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_uber_cadence_api_v1_tasklist_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StickyExecutionAttributes.ProtoReflect.Descriptor instead.
func (*StickyExecutionAttributes) Descriptor() ([]byte, []int) {
	return file_uber_cadence_api_v1_tasklist_proto_rawDescGZIP(), []int{6}
}

func (x *StickyExecutionAttributes) GetWorkerTaskList() *TaskList {
	if x != nil {
		return x.WorkerTaskList
	}
	return nil
}

func (x *StickyExecutionAttributes) GetScheduleToStartTimeout() *durationpb.Duration {
	if x != nil {
		return x.ScheduleToStartTimeout
	}
	return nil
}

var File_uber_cadence_api_v1_tasklist_proto protoreflect.FileDescriptor

var file_uber_cadence_api_v1_tasklist_proto_rawDesc = []byte{
	0x0a, 0x22, 0x75, 0x62, 0x65, 0x72, 0x2f, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x55, 0x0a, 0x08, 0x54, 0x61,
	0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e,
	0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x22, 0x61, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x22, 0x55, 0x0a, 0x19, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe8, 0x01, 0x0a, 0x0e,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c,
	0x0a, 0x12, 0x62, 0x61, 0x63, 0x6b, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x68, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x62, 0x61, 0x63, 0x6b,
	0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x63, 0x6b, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x61, 0x63, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x72, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x12, 0x44, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x63,
	0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x44, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x3f, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x0a, 0x50, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x72, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x22, 0xba, 0x01, 0x0a, 0x19, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x47,
	0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x62, 0x65, 0x72, 0x2e,
	0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x54,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x19, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54,
	0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x2a, 0x60, 0x0a,
	0x0c, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1a, 0x0a,
	0x16, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x52, 0x4d,
	0x41, 0x4c, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x4c, 0x49, 0x53,
	0x54, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x49, 0x43, 0x4b, 0x59, 0x10, 0x02, 0x2a,
	0x64, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x16, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x54,
	0x41, 0x53, 0x4b, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45,
	0x43, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x53, 0x4b,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x49, 0x54, 0x59, 0x10, 0x02, 0x42, 0x56, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x75, 0x62, 0x65,
	0x72, 0x2e, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x42, 0x08, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x62, 0x65, 0x72, 0x2f, 0x63, 0x61,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x2e, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uber_cadence_api_v1_tasklist_proto_rawDescOnce sync.Once
	file_uber_cadence_api_v1_tasklist_proto_rawDescData = file_uber_cadence_api_v1_tasklist_proto_rawDesc
)

func file_uber_cadence_api_v1_tasklist_proto_rawDescGZIP() []byte {
	file_uber_cadence_api_v1_tasklist_proto_rawDescOnce.Do(func() {
		file_uber_cadence_api_v1_tasklist_proto_rawDescData = protoimpl.X.CompressGZIP(file_uber_cadence_api_v1_tasklist_proto_rawDescData)
	})
	return file_uber_cadence_api_v1_tasklist_proto_rawDescData
}

var file_uber_cadence_api_v1_tasklist_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_uber_cadence_api_v1_tasklist_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_uber_cadence_api_v1_tasklist_proto_goTypes = []interface{}{
	(TaskListKind)(0),                 // 0: uber.cadence.api.v1.TaskListKind
	(TaskListType)(0),                 // 1: uber.cadence.api.v1.TaskListType
	(*TaskList)(nil),                  // 2: uber.cadence.api.v1.TaskList
	(*TaskListMetadata)(nil),          // 3: uber.cadence.api.v1.TaskListMetadata
	(*TaskListPartitionMetadata)(nil), // 4: uber.cadence.api.v1.TaskListPartitionMetadata
	(*TaskListStatus)(nil),            // 5: uber.cadence.api.v1.TaskListStatus
	(*TaskIDBlock)(nil),               // 6: uber.cadence.api.v1.TaskIDBlock
	(*PollerInfo)(nil),                // 7: uber.cadence.api.v1.PollerInfo
	(*StickyExecutionAttributes)(nil), // 8: uber.cadence.api.v1.StickyExecutionAttributes
	(*wrapperspb.DoubleValue)(nil),    // 9: google.protobuf.DoubleValue
	(*timestamppb.Timestamp)(nil),     // 10: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),       // 11: google.protobuf.Duration
}
var file_uber_cadence_api_v1_tasklist_proto_depIdxs = []int32{
	0,  // 0: uber.cadence.api.v1.TaskList.kind:type_name -> uber.cadence.api.v1.TaskListKind
	9,  // 1: uber.cadence.api.v1.TaskListMetadata.max_tasks_per_second:type_name -> google.protobuf.DoubleValue
	6,  // 2: uber.cadence.api.v1.TaskListStatus.task_id_block:type_name -> uber.cadence.api.v1.TaskIDBlock
	10, // 3: uber.cadence.api.v1.PollerInfo.last_access_time:type_name -> google.protobuf.Timestamp
	2,  // 4: uber.cadence.api.v1.StickyExecutionAttributes.worker_task_list:type_name -> uber.cadence.api.v1.TaskList
	11, // 5: uber.cadence.api.v1.StickyExecutionAttributes.schedule_to_start_timeout:type_name -> google.protobuf.Duration
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_uber_cadence_api_v1_tasklist_proto_init() }
func file_uber_cadence_api_v1_tasklist_proto_init() {
	if File_uber_cadence_api_v1_tasklist_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_uber_cadence_api_v1_tasklist_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_tasklist_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskListMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_tasklist_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskListPartitionMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_tasklist_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskListStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_tasklist_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskIDBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_tasklist_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uber_cadence_api_v1_tasklist_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StickyExecutionAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uber_cadence_api_v1_tasklist_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_uber_cadence_api_v1_tasklist_proto_goTypes,
		DependencyIndexes: file_uber_cadence_api_v1_tasklist_proto_depIdxs,
		EnumInfos:         file_uber_cadence_api_v1_tasklist_proto_enumTypes,
		MessageInfos:      file_uber_cadence_api_v1_tasklist_proto_msgTypes,
	}.Build()
	File_uber_cadence_api_v1_tasklist_proto = out.File
	file_uber_cadence_api_v1_tasklist_proto_rawDesc = nil
	file_uber_cadence_api_v1_tasklist_proto_goTypes = nil
	file_uber_cadence_api_v1_tasklist_proto_depIdxs = nil
}
